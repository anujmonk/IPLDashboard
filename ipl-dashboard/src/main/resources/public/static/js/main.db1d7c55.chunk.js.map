{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db1d7c55.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({teamName,match}) => {\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute=`/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n\n\n    if(match==null) {\n        return null}\n    return (\n      <div className={isMatchWon ? 'MatchDetailCard won-card': 'MatchDetailCard lost-card'}>\n        <div>\n          <h1> vs <Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n          <h2 className=\"match-date\">{match.date}</h2>   \n          <h3 className=\"match-venue\">at {match.venue}</h3>   \n          <h2 className=\"match-winner\">{match.matchWinner} won by {match.resultMargin} {match.result}</h2>   \n        </div>\n        <div className=\"additional-details\">\n          <h3>First Innings</h3>\n          <p>{match.team1}</p>\n          <h3>Second Innings</h3>\n          <p>{match.team2}</p>\n          <h3>Man of the match</h3>\n          <p>{match.playerOfMatch}</p>\n          <h3>Umpires</h3>\n          <p>{match.umpire1}, {match.umpire2}</p>\n        </div>\n      </div>\n    );\n  }\n  \n  \n  ","import {Link} from 'react-router-dom';\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({teamName,match}) => {\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute=`/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n\n    if (!match) return null;\n    return (\n      <div className={isMatchWon ? 'MatchSmallCard won-card': 'MatchSmallCard lost-card'}>\n        <span className=\"vs\">vs</span>\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n        <p className=\"match-winner\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>     \n      </div>\n    );\n  }\n  \n  \n  ","import { React, useEffect, useState} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\nimport './TeamPage.scss';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({matches: []});\n    const {teamName} = useParams();\n    useEffect(\n        () => {\n         const  fetchTeam = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n            const data = await response.json();\n            \n            setTeam(data);\n            \n         };\n         fetchTeam();\n         \n        }, [teamName]\n    );\n    \n    if(!team || !team.teamName) {\n      return <h1>Team Not Found</h1>\n    }\n    return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\" >\n        Wins / Losses\n        <PieChart\n            data={[\n              { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n              { title: 'Wins', value: team.totalWins, color: '#4da375' }\n            ]}\n        />\n      </div>\n      <div className=\"match-detail-section\">\n        <h3>Latest Matches</h3>\n        <MatchDetailCard teamName={teamName} match={team.matches[0]}/>\n      </div>\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={teamName} match={match}/>)}\n      <div className=\"more-link\">\n      <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\n      </div>\n    </div>\n    \n    );\n}","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './YearSelector.scss';\n\n\nexport const YearSelector = ({teamName}) => {\n    \n    let years = [];\n   const startYear =  process.env.REACT_APP_DATA_START_YEAR\n   const endYear = process.env.REACT_APP_DATA_END_YEAR\n\n   for(let i= startYear;i<=endYear;i++) {\n       years.push(i);\n   }\n\n   return (\n       <ol className=\"years-list\">\n        {years.map(year => (\n        <li key={year}>\n            <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n        </li>\n        ))}\n        </ol>\n   )\n}","import { React, useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss'\n\nexport const MatchPage = () => {\n\n    const [matches, setMatches] = useState([]);\n    \n    const {teamName,year} = useParams();\n\n    useEffect(\n      () => {\n       const  fetchMatches = async () => {\n          const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n          const data = await response.json();\n          \n          setMatches(data);\n          \n       };\n       fetchMatches();\n       \n      }, [teamName,year]\n  );\n\n    \n    return (\n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n        <h3> Select Year </h3>\n        <YearSelector teamName= {teamName}/>\n      </div>\n      <div>\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n        {\n          matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match}/>)\n        }\n      </div>\n    </div>\n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                    <Link to={`/teams/${teamName}`}>\n                        {teamName}\n                    </Link>\n                </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport { TeamTile } from '../components/TeamTile';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n    useEffect(\n        () => {\n         const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n\n         };\n         fetchAllTeams();\n            \n\n\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n        \n    );\n}","import './App.scss';\nimport {HashRouter as Router,Route,Routes} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Routes>\n            <Route path=\"/teams/:teamName/matches/:year\" element={<MatchPage />}>\n            </Route>\n            <Route path=\"/teams/:teamName\" element={<TeamPage />}>\n            </Route>\n            <Route path=\"/\" element={<HomePage />}>\n            </Route>\n          </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}